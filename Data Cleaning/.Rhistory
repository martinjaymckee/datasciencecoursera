install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
setwd("~/Workspace/R_Workspace/Coursera/datasciencecoursera/Data Cleaning")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "american_community_survery_2006.csv")
data <- read.csv("american_community_survery_2006.csv")
agriculturalLogical <- (data$ACR == 3) & (data$AGS == 6)
which(agriculturalLogical)
?which
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "jeff.jpg")
install.packages("jpeg")
library(jpeg)
?jpeg
img <- jpeg("jeff.jpg", native=TRUE)
img <- jpeg("jeff.jpg")
img
img <- readJPEG("jeff.jpg", native=TRUE)
img
?quantile
quantile(img, probs=c(0.3, 0.8))
q <- quantile(img, probs=c(0.3, 0.8))
q + c(638,0)
q - c(638,0)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv")
data <- read.csv("gdp.csv")
data
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "educational_stats.csv")
edu <- read.csv("educational_stats.csv")
edu
names(data)
names(edu)
View("gdp.csv")
View(data)
data_names = unique(data$X.2)
data_names
edu_select <- edu$Short.Name %in% data_names
sum(edu_select)
edu_names <- unique(edu$Short.Name)
data_select <- data$X.2 %in% edu_names
sum(data_select)
which(data_select)
View(edu_names)
summary(edu_names)
"" %in% edu_names
summary(data_names)
str(data_names)
str(edu_names)
matching_names <- lapply(data_names, function(x) x in edu_names)
matching_names <- lapply(data_names, function(x) x %in% edu_names)
str(matching_names)
sum(matching_names)
matching_names <- sapply(data_names, function(x) x %in% edu_names)
sum(matching_names
)
summary(matching_names)
select_matches <- sapply(data_names, function(x) x %in% edu_names)
matching_names <- data_names[select_matches]
summary(matching_names)
View(matching_names)
matching_names
matching_data <- data[select_matches]
matching_data <- data[select_matches,]
View(matching_data)
sorted_data <- order(matching_data, matching_data$Gross.domestic.product.2012)
matching_data <- data[select_matches & !is.null(data$Gross.domestic.product.2012),]
str(matching_data)
matching_data <- data[select_matches & data$Gross.domestic.product.2012 != '',]
data$Gross.domestic.product.2012 != ''
sum(data$Gross.domestic.product.2012 != '')
select_matches
select_matches <- data_names %in% edu_names
select_matches
select_matches <- data$X.2 %in% edu_names
select_matches
matching_data <- data[select_matches & data$Gross.domestic.product.2012 != '',]
matching_data
sorted_data <- order(matching_data, matching_data$Gross.domestic.product.2012)
matching_data$Gross.domestic.product.2012
?order
sorted_data <- matching_data[order(matching_data$Gross.domestic.product.2012)]
sorted_data <- matching_data[order(matching_data$Gross.domestic.product.2012),]
sorted_data
View(sorted_data)
sorted_data <- matching_data[order(matching_data$Gross.domestic.product.2012),]
matching_data$Gross.domestic.product.2012 <- as.numeric(matching_data$Gross.domestic.product.2012)
sorted_data <- matching_data[order(matching_data$Gross.domestic.product.2012),]
data <- read.csv("gdp.csv")
View(data)
data$Gross.domestic.product.2012 <- as.numeric(data$Gross.domestic.product.2012)
data <- read.csv("gdp.csv")
data <- data[!(data$Gross.domestic.product.2012 == '')]
data <- data[!(data$Gross.domestic.product.2012 == ''),]
data <- data[data$Gross.domestic.product.2012 != '',]
data
View(data)
matching_data <- data[data$X.2 %in% edu_names]
matching_data <- data[data$X.2 %in% edu_names,]
View(matching_data)
matching_data <- data[data$X.2 %in% edu$Short.Name,]
View(matching_data)
edu$Short.Name
data <- read.csv("gdp.csv")
View(data)
data$X.3 <- as.numeric(data$X.3)
data$Gross.domestic.product.2012 <- as.numeric(data$Gross.domestic.product.2012)
data <- read.csv("gdp.csv")
data <- data[data$X.3 != '',]
data$X.3 <- as.numeric(data$X.3)
matching_data <- data[data$X.2 %in% edu$Short.Name,]
View(matching_data)
data <- read.csv("gdp.csv")
data <- data[data$X.3 != '' & data$X.3 != '..',]
data$X.3 <- as.numeric(data$X.3)
matching_data <- data[data$X.2 %in% edu$Short.Name,]
data <- read.csv("gdp.csv")
data <- data[5:,]
data <- data[5:330,]
View(data)
data <- data[5:235,]
View(data)
data <- read.csv("gdp.csv")
data <- data[5:235,]
View(data)
data$X.3[210]
data[210, "X.3"]
data_valid <- data$X.3 %in% edu$Short.Name
View(data_valid)
?as.numeric
as.numeric(c("", ".."))
data$X.3 <- as.numeric(data$X.3)
data <- read.csv("gdp.csv")
data <- data[5:235,]
str(data$X.3)
?read.csv
library(data.table)
?data.table
?fread
data <- fread("gdp.csv", select=c(1, 2, 4, 5), colClasses = c(chr, numeric, chr, numeric))
?read.csv
data <- fread("gdp.csv", select=c(1, 2, 4, 5), colClasses = c(character, numeric, character, numeric))
data <- fread("gdp.csv", colClasses = c(character, numeric, NULL, character, numeric, NULL, NULL, NULL, NULL, NULL))
data <- fread("gdp.csv", colClasses = c(code=character, gdp=numeric, NULL, character, numeric, NULL, NULL, NULL, NULL, NULL))
data <- fread("gdp.csv", select=c(1, 2, 4, 5))
data
data <- fread("gdp.csv", skip=4, select=c(1, 2, 4, 5))
data
data <- fread("gdp.csv", skip=4, select=c(1, 2, 4, 5), colClasses = list(character = c(1, 4), numeric = c(2, 5)))
data
data.colnames() <- c("code", "rank", "Short.Name", "GDP")
names(data) <- c("code", "rank", "Short.Name", "GDP")
data
View(data)
data_select <- data$Short.Name %in% edu_names
sum(data_select)
sorted_data <- data[order(data$GDP)]
View(sorted_data)
data$GDP[data$GDP == ''] <- NA
data$GDP[data$GDP == '..'] <- NA
matching_ids <- sum(data$Short.Name %in% unique(edu$Short.Name))
View(edu)
matching_ids <- sum(data$code %in% unique(edu$CountryCode))
data$code[data$code] <- NA
data$code[data$code == ''] <- NA
matching_ids <- sum(data$code %in% unique(edu$CountryCode))
matching_ids <- sum(unique(data$code) %in% unique(edu$CountryCode))
sorted_data <- data[order(data$GDP)]
sorted_data[13]
sorted_data <- data[order(-data$GDP)]
sorted_data[13]
View(sorted_data)
str(data$GDP)
data$GDP <- as.numeric(data.GDP)
data$GDP <- as.numeric(data$GDP)
View(data)
str(data$rank)
data$rank <- as.numeric(data$rank)
data <- fread("gdp.csv", skip=4, select=c(1, 2, 4, 5), colClasses = list(character = c(1, 4), numeric = c(2, 5)))
names(data) <- c("code", "rank", "Short.Name", "GDP")
data$GDP <- gsub(',', '')
data$GDP <- gsub(',', '', data$GDP)
View(data)
data$GDP <- as.numeric(data$GDP)
data_valid <- data$code %in% edu$CountryCode
sum(data_valid)
data_valid <- (data$code %in% edu$CountryCode) & !is.na(data$GDP)
sum(data_valid)
matching_data <- data[data_valid,]
View(matching_data)
data$code <- as.numeric(data$code)
data_valid <- (data$code %in% edu$CountryCode) & !is.na(data$code)
sum(data_valid)
data <- fread("gdp.csv", skip=4, select=c(1, 2, 4, 5), colClasses = list(character = c(1, 4), numeric = c(2, 5)))
names(data) <- c("code", "rank", "Short.Name", "GDP")
data$GDP <- gsub(',', '', data$GDP)
data$GDP <- as.numeric(data$GDP)
str(data$rank)
data$rank <- as.numeric(data$rank)
data_valid <- (data$code %in% edu$CountryCode) & !is.na(data$rank)
sum(data_valid)
matching_data <- data[data_valid,]
View(matching_data)
sorted_data <- matching_data[order(matching_data$GDP)]
View(sorted_data)
View(edu)
library(dplyr)
library(dtplyr)
install.packages("dtplyr")
library(dtplyr)
?tbl_dt
edu_tbl <- tbl_df(edu)
View(edu_tbl)
?group_by
edu_tbl <- group_by(edu_tbl, Income.Group)
edu_tbl
?groups
oecd <- select(edu_tbl, Income.Group == High income: OECD)
oecd <- select(edu_tbl, Income.Group == "High income: OECD")
?select
oecd <- edu[edu$Income.Group == "High income: OECD"]
oecd <- edu[edu$Income.Group == "High income: OECD",]
nonoecd <- edu[edu$Income.Group == "High income: nonOECD"]
nonoecd <- edu[edu$Income.Group == "High income: nonOECD",]
oecd
str(oecd)
unique(oecd$CountryCode)
income_groups <- c(oecd, nonoecd)
income_group_codes <- sapply(income_groups, function (x) unique(x$CountryCode))
income_group_codes <- c(unique(income_group[1]$CountryCode), unique(income_group[2]$CountryCode))
income_group_codes <- c(unique(income_groups[1]$CountryCode), unique(income_groups[2]$CountryCode))
income_group_codes
income_group_codes <- list(unique(oecd$CountryCode), unique(nonoecd$CountryCode))
income_group_codes
sapply(income_group_codes, function(x) data[data$code %in% x])
group_rows <- sapply(income_group_codes, function(x) data[data$code %in% x])
sapply(group_rows, function (x) mean(x$rank))
list(mean(group_rows[1]$rank), mean(group_rows[2]$rank))
list(mean(group_rows[1]$rank, rm.na=TRUE), mean(group_rows[2]$rank, rm.na=TRUE))
group_rows[1]$rank
group_rows[1]
list(mean(data[data$code %in% group_rows[1]], rm.na=TRUE), mean(data[data$code %in% group_rows[2]], rm.na=TRUE))
data[data$code %in% group_rows[1],]
data[data$code %in% unique(oecd$CountryCode),]
mean(data[data$code %in% unique(oecd$CountryCode),]$rank, rm.na=TRUE)
mean(data[data$code %in% unique(oecd$CountryCode),]$rank, rm.na=TRUE), mean(data[data$code %in% unique(nonoecd$CountryCode),]$rank, rm.na=TRUE)
list(mean(data[data$code %in% unique(oecd$CountryCode),]$rank, rm.na=TRUE), mean(data[data$code %in% unique(nonoecd$CountryCode),]$rank, rm.na=TRUE))
nonoecd_gdp <- data[data$code %in% unique(nonoecd$CountryCode),]$rank, rm.na=TRUE)
nonoecd_gdp <- data[data$code %in% unique(nonoecd$CountryCode),]$rank
nonoecd_gdp <- data[data$code %in% unique(nonoecd$CountryCode),]
View(nonoecd_gdp)
mean(nonoecd_gdp, na.rm = TRUE)
mean(nonoecd_gdp$rank, na.rm = TRUE)
ntile
?ntile
data
quartile_data <- mutate(data, quartile = ntile(rank, 5))
View(quartile_data)
sum(quartile_data$quartile == 1)
quartile_data$rank
quartile_data$quartile
quartile_data <- mutate(data, quartile = ntile(rank, 3))
quartile_data$quartile
quartile_data <- data %>% filter(!is.na(rank)) % mutate(quartile = ntile(rank, 5))
quartile_data <- data %>% filter(!is.na(rank)) %>% mutate(quartile = ntile(rank, 5))
sum(quartile_data$quartile == 1)
?table
?filter
quartile_data <- quartile_data %>% group_by(quartile)
quartile_data
edu_table
edu_tbl
edu_tbl$CountryCode
edu_tbl[CountryCode == "CAN"]
edu_tbl[edu_tbl$CountryCode == "CAN"]
filter(edu_tbl, CountryCode == "CAN")
quartile_data <- data %>% filter(!is.na(rank)) %>% mutate(quartile = ntile(rank, 5), Income.Group = filter(edu_tbl, code)$Income.Group)
quartile_data <- data %>% filter(!is.na(rank)) %>% mutate(quartile = ntile(rank, 5), Income.Group = filter(edu_tbl, edu_tbl$CountryCode == code)$Income.Group)
quartile_data <- data %>% filter(!is.na(rank)) %>% mutate(quartile = ntile(rank, 5))
quartile_data
quartile_data
upper_quartile_data <- quartile_data %>% filter(quartile == 1)
upper_quartile_data
?find
codes <- quantile_data$codes
codes <- upper_quartile_data$codes
codes
upper_quartile_data
codes <- upper_quartile_data$code
codes
sum(edu_tbl$CountryCode %in% codes & edu_tbl$Income.Group == "Lower middle income")
?save
save.image()
swirl()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package="lubridate")
help(package=lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
dmy("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 16, minutes = 50)
this_moment
now("America/New_York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long <- last_time %--% arrive
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
ls
data <- read.csv("american_community_survery_2006.csv")
data
names(data)
?strsplit
s <- strsplit(names(data), "wgtp")
s[123]
gdp
gdp <- read.csv("gdp.csv")
gdp
gdp_dollars <- gdp$X.3
gdp_dollars <- as.numeric(gdp_dollars)
gdp_dollars
?gsub
gdp_chr <- gsub(",","", gdp$X.3[gdp$X.3 != ""])
gdp_chr
gdp_chr <- gdp_chr[gdp_chr != ".."]
gdp_chr
gdp_dollars <- as.numeric(gdp_chr)
gdp_dollars
gdp_dollars <- gdp_dollars[!is.na(gdp_dollars)]
mean(gdp_dollars)
size(gdp_dollars)
nrow(gdp_dollars)
str(gdp_dollars)
View(gdp)
gdp_chr <- gsub(",", "", gdp[5:194,]$X.3)
tail(gdp_chr)
gdp_dollars <- as.numeric(gdp_chr)
mean(gdp_dollars)
countryNames <- unique(gdp$X.2)
grep("^United", countryNames)
countryNames
grep("^United", countryNames)
countryNames[101]
countryNames[188]
countryNames[197]
gdp_countries <- unique(gdp[5:194]$X[gdp$X != ""])
gdp_countries <- unique(gdp[5:194]$X[gdp$X != "",])
gdp_countries <- unique(gdp[5:194,]$X[gdp$X != ""])
gdp_countries
edu
matching_edu <- select(edu, CountryCode %in% gdp_countries)
matching_edu <- edu %>% filter(CountryCode %in% gdp_countries)
matching_edu
june_end <- edu %>% filter(grep("Fiscal year end: June", edu$Special.Notes))
june_end <- edu %>% filter(grepl("Fiscal year end: June", edu$Special.Notes))
june_end
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("")
amzn = getSymbols("AMZN", auto.assign=FALSE)
sampleTimes <- index(amzn)
sampleTimes
valid_year <- sum(sample_times.year() == 2012)
str(sampleTimes[1])
valid_year <- sum(sampleTimes.year() == 2012)
valid_year <- sum(sampleTimes.getYear() == 2012)
?Date
posix_dates <- as.POSIXlt(sampleTimes)
posix_dates
?POSIXlt
year(posix_dates)
sum(year(posix_dates) == 2012)
posix_dates <- posix_dates[years(posix_dates) == 2012]
posix_dates <- posix_dates[year(posix_dates) == 2012]
posix_dates
posix_dates <- as.POSIXlt(sampleTimes)
valid_dates <- sampleTime[year(posix_dates) == 2012 & weekdays(sampleTime)]
valid_dates <- sampleTimes[year(posix_dates) == 2012 & weekdays(sampleTimes) == "SUN"]
valid_dates
weekdays(sampleTimes)
valid_dates <- sampleTimes[year(posix_dates) == 2012 & weekdays(sampleTimes) == "Monday"]
valid_dates
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", "./human_activity_recognition_dataset.zip")
ls
getcwd
getwd()
mkdir("Course Assignment")
